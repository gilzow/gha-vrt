name: 'Visual Regression Testing with Backstop.js'
description: 'Runs visual regression testing with backstop.js between a production site and PR version of a site'
inputs:
  baseline_url:  # owner of the repo
    description: 'The production Url of the site you want to use as the baseline.'
    required: true
  test_url:
    description: 'The URL of the PR site we want to test against the baseline'
    required: true
#  If we ever decide to post an issue back to the PR?
#  github-token:
#    description: 'Github token to the repository so we can work with the github api. Typically GITHUB_TOKEN'
#    required: true
  # Not currently implemented
  threshold:
    description: 'Percentage of different pixels allowed to pass test'
    required: false
    default: "0.1"
outputs:
  vrt_result:
    description: "Reports from VRT"
    value: ${{ steps.run-test.outputs.results }}

# Things we need to do
# Verify the URLs we were given respond?
# Install backstop
# Pass the reference url to backstop
# Run npm run-script backstop:reference
# Pass the test url to backstop
# Run npm run-script backstop:test
# if test fails report back `false` and return the html report?
# if test passes, report back `true`
runs:
  using: "composite"
  steps:
    - name: 'Test Baseline URL'
      id: test-baseline-url
      shell: bash
      run: |
        url=${{ inputs.baseline_url }}
        response=$(curl -s -o /dev/null -I -w "%{http_code}" "${url//http:/https:}");
        if [[ "200" == "${response}" ]]; then
          echo "::notice::Environment responded with http header 200"
        else
          echo "::error::Response from environment was something other than 200. Response returned was ${response}"
          exit 1;
        fi
    - name: 'Test Testing URL'
      id: verify-repo
      shell: bash
      run: |
        url=${{ inputs.test_url }}
        response=$(curl -s -o /dev/null -I -w "%{http_code}" "${url//http:/https:}");
        if [[ "200" == "${response}" ]]; then
          echo "::notice::Environment responded with http header 200"
        else
          echo "::error::Response from environment was something other than 200. Response returned was ${response}"
          exit 1;
        fi
    - name: 'install backstop'
      id: install-backstop
      shell: bash
      run: |
        npm install
    - name: 'build reference'
      id: build-reference
      shell: bash
      run: |
        echo "::notice::Starting backstopjs to generate baseline images."
        npm run-script backstop:reference -- --refURL="${inputs.baseline_url}" -- testURL="${inputs.test_url}"

    - name: 'run test'
      id: run-test
      shell: bash
      run: |
        echo "::notice::Starting Backstop VRT testing against ${inputs.test_url}"
        npm run-script backstop:test -- --refURL="${inputs.baseline_url}" -- testURL="${inputs.test_url}"
        testresults=$?
        if (0 !== $testresults); then
          echo "::error::Backstop visual regression testing failed. Please see the generated report"
          results="false"
        else
          results="true"
        fi
        
        echo "::set-output name=results::${target_url}"

    - name: 'export reports'
      id: export-reports
      uses: actions/upload-artifact@v3
      with:
        name: vrt-report
        path: |
          backstop_data
          !backstop_data/engine_scripts/*
